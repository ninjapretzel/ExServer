// Map data.
// Objects of this kind may be generated by a generator for a procedural map. 
{
	// Display name and used to teleport to map.
	name: "Avalon",
	// Was this map generated by a procedural function?
	// (If not present, inferred as false.)
	procedural: false,
	
	// Physical space simulation information ...
	// Size of a single cell
	cellSize: 16,
	// Radius of cells visible to clients 
	cellDist: 2,
	
	// Toggles between square cells and cubical cells
	// maps in "3d" games might still prefer 2d cells 
	// if most of the gameplay is actually only 2d (no verticality)
	// For example, if there is a map with a wide terrain. 
	is3d: false,
	// axes are for what axes are entities allowed to move over for non-2d maps.
	axes: "xz",
	// Bounds where entities are allowed.
	// y is ignored in 2d mode. (server reads/writes vector-like primitives to database as an array)
	bounds: [ 
		0, 40, 0,
		1000, 40, 0,
	],
	
	// sparse maps update objects only around players, 
	// and destroy cells when they are not visible to players.
	// This also means any entities that are in such cells get poofed.
	// Procedural maps should be sparse.
	sparse: false,
	// Solo maps do not show other client's entities to any connected players.
	// They may show other entities belonging to the client.
	solo: false,
	
	// Information about entities on the map.
	// These objects are placed both on the server and client.
	entities: [
		{
			type: "Terrain/Terrain2",
			position: [ 0, 0, 0 ], 
			rotation: [ 0, 0, 0 ],
			scale: [ 1, 1, 1 ],
		},
	],
	
	
}